-- INNER JOIN,OUTER JOIN,CROSS JOIN,
-- UNION,UNION ALL,
-- SUBQUERY,
-- WHEN USE JOIN AND WHEN USE SUBQUERY   
use sakila;

-- CREATE 2 TABLE
CREATE TABLE table1
(Id INT,Value VARCHAR(10));
CREATE TABLE table2
(Id INT,Value VARCHAR(10));

-- INSERT VALUE 
INSERT INTO table1(Id,Value) VALUES
(1,'First'),
(2,'Second'),
(3,'Third'),
(4,'Fourth'),
(5,'Fifth');

INSERT INTO table2(Id,Value) VALUES
(1,'First'),
(2,'Second'),
(3,'Third'),
(6,'Six'),
(7,'Seven'),
(8,'Eight');


SELECT * FROM table1;
SELECT * FROM table2;


-- INNER JOIN and equi JOIN

SELECT t1.*,t2.*
FROM table1 t1
INNER JOIN table2 t2
ON t1.Id = t2.Id;


-- MYSQL DONT SUPPORT FULL FULL OUTER JOIN
-- BUT WE CAN DO THAT WITH 
-- LEFT JOIN ,RIGHT JOIN, AND UNION



-- LEFT OUTER JOIN/LEFT JOIN

-- WHAT IS LEFT JOIN
-- SUPPOSE THERE IS TWO TABLE 
-- LEFT TABLE AND RIGHT TABLE
-- THINK ABOUT LIKE A SET
-- SET A REPREESENT TABLE A 
-- SET B REPRESENT TABLE B
-- THERE ARE COMMON PART AUB(A INTERSECTION B)
-- LEFT OUTER JOIN  RETURN THE COMPLETE LEFT TABLE AND THE COMMON PART
-- IF THERE IS NO COMMON PART THEN VALUE WILL BE NULL


-- THIS IS LEFT JOIN
SELECT t1.*,t2.*
FROM table1 AS t1
LEFT JOIN table2 t2
ON t1.Id = t2.Id;

-- ALL VALUE FROM THE TABLE 1
-- COMMON VALUE FROM THE TABLE 2
-- LEFT JOIN IS LEFT OUTER JOIN

SELECT t1.*,t2.*
FROM table1 AS t1
LEFT OUTER JOIN table2 t2
ON t1.Id = t2.Id;


-- RIGHT JOIN
-- ALL VALUE FROM TABLE 2
-- COMMON VALUE FROM TABLE1
-- RIGHT JOIN IS RIGHT OUTER JOIN

SELECT t1.*,t2.*
FROM table1 AS t1
RIGHT JOIN table2 t2
ON t1.Id = t2.Id;


-- IF YOU SWAP THE TABLE IN
-- THE LEFT JOIN YOU CAN GENERATE A RIGHT JOIN

SELECT t2.*,t1.*
FROM table2 AS t2
LEFT JOIN table1 t1
ON t2.Id = t1.Id;

-- LEFT JOIN IS THE MOST IMPORTANT JOIN FOR DEVELOPER

-- FULL OUTER JOIN
-- LEFT JOIN U RIGHT JOIN
-- TAKE BOTH LEFT AND RIGHT JOIN AND UNION THEM
-- YOU GET FULL OUTER JOIN

(SELECT t1.*,t2.*
FROM table1 AS t1
LEFT OUTER JOIN table2 t2
ON t1.Id = t2.Id)
UNION
(SELECT t1.*,t2.*
FROM table1 AS t1
RIGHT JOIN table2 t2
ON t1.Id = t2.Id);

-- THIS IS THE FULL OUTER JOIN

-- CROSS JOIN

-- CROSS JOIN IS A KARTESIAN JOIN
-- CROSS JOIN NEED NO  CLAUSE
-- EACH ROW OF TABLE 1 WILL BE MULTIPLIED BY EVERY ROW ON TABLE2
-- THIS IS CALL CROSS JOIN
-- TABLE 1 HAS 5 ROW
-- TABLE 2 6 ROW
-- AFTER CROSS JOIN TOTAL ROW IS 5*6 = 30 ROW
SELECT t1.*,t2.*
FROM table1 AS t1
CROSS JOIN table2 t2;


-- POP QUIZE

CREATE TABLE Students(StudentId INT,StudentName VARCHAR(50));

INSERT INTO Students(StudentId,StudentName) VALUES(1,'John');
INSERT INTO Students(StudentId,StudentName) VALUES(2,'Matt');
INSERT INTO Students(StudentId,StudentName) VALUES(3,'James');


CREATE TABLE Classes(ClassId INT,ClassName VARCHAR(50));

INSERT INTO Classes(ClassId,ClassName) VALUES(1,'Maths');
INSERT INTO Classes(ClassId,ClassName) VALUES(2,'Arts');
INSERT INTO Classes(ClassId,ClassName) VALUES(3,'History');

CREATE TABLE StudentClass(StudentId INT,ClassId INT);

INSERT INTO StudentClass(StudentId,ClassId) VALUES(1,1);
INSERT INTO StudentClass(StudentId,ClassId) VALUES(1,2);
INSERT INTO StudentClass(StudentId,ClassId) VALUES(3,1);
INSERT INTO StudentClass(StudentId,ClassId) VALUES(3,1);
INSERT INTO StudentClass(StudentId,ClassId) VALUES(3,1);


-- WHAT WILL BE THE BEST POSSIBLE JOIN IF WE WANT TO RETRIEVE
-- ALL STUDENTS WHO HAVE SIGNED UP FOR THE CLASSES IN SUMMER

-- WHAT WILL BE BEST POSSIBLE JOIN IF WE WANT TO RETRIVE ALL THE STUDENTS WHO HAVE SIGNED UP FOR NO CLASS 
-- IN SUMMER

-- first made a join table 
-- then select it very easy



SELECT st.StudentName,cl.CLassName
FROM StudentClass as sc
LEFT JOIN StudentClass sc ON sc.StudentId
